name: Platform-ERM CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: |
        cd backend
        dotnet restore
        
    - name: Build
      run: |
        cd backend
        dotnet build --no-restore
        
    - name: Test
      run: |
        cd backend
        dotnet test --no-build --verbosity normal

  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Type check
      run: |
        cd frontend
        npm run type-check
        
    - name: Lint
      run: |
        cd frontend
        npm run lint
        
    - name: Test
      run: |
        cd frontend
        npm run test -- --coverage
        
    - name: Build
      run: |
        cd frontend
        npm run build

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: platformerm_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
        
    - name: Run integration tests
      run: |
        cd backend
        dotnet test --filter Category=Integration
      env:
        ConnectionStrings__DefaultConnection: Host=localhost;Database=platformerm_test;Username=postgres;Password=postgres