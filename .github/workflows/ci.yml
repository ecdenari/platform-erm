name: Platform-ERM CI/CD

on:
  push:
    branches: [ main, develop, 'feature/**' ]
  pull_request:
    branches: [ main, develop ]

env:
  DOTNET_VERSION: '8.0.x'
  NODE_VERSION: '18.x'

jobs:
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./backend
    
    - name: Build
      run: dotnet build --no-restore
      working-directory: ./backend
    
    - name: Test
      run: dotnet test --no-build --verbosity normal
      working-directory: ./backend

  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
      working-directory: ./frontend
    
    - name: Run linter
      run: npm run lint
      working-directory: ./frontend
      continue-on-error: true
    
    - name: Run tests
      run: npm test -- --passWithNoTests
      working-directory: ./frontend
    
    - name: Build
      run: npm run build
      working-directory: ./frontend

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
    
    - name: Run integration tests
      run: |
        echo "Integration tests will be implemented by Agent 3"
        echo "Placeholder for now"

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Check for large files
      run: |
        find . -type f -size +1M -not -path "./.git/*" -exec ls -lh {} \; | awk '{print $5 " " $9}'
    
    - name: Check for secrets
      run: |
        # Basic check for common secret patterns
        ! grep -r "password\s*=\s*['\"][^'\"]\+['\"]" --include="*.cs" --include="*.ts" --include="*.tsx" --include="*.js" .