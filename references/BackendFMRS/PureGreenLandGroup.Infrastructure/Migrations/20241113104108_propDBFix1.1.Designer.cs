// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PureGreenLandGroup.Infrastructure.DbConn;

#nullable disable

namespace PureGreenLandGroup.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241113104108_propDBFix1.1")]
    partial class propDBFix11
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.ControllerProgrames", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ControllerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFriEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMonEnable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSatEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSunEnable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsThuEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTueEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWedEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("ProgramName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramTimer1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramTimer2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramTimer3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timer1Median")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timer2Median")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timer3Median")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ControllerId");

                    b.ToTable("ControllerProgrames");
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.ControllerZones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ControllerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FlowRate")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MoreLessId")
                        .HasColumnType("int");

                    b.Property<int?>("PlantTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ProgramA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SlopeId")
                        .HasColumnType("int");

                    b.Property<int?>("SoilTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("SprinkleTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ValveSizeId")
                        .HasColumnType("int");

                    b.Property<string>("ZoneLocationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ControllerId");

                    b.ToTable("ControllerZones");
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.Controllers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Faults")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsRainSensor")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRainSesnorFunctioning")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<long>("TotalInspectionIssues")
                        .HasColumnType("bigint");

                    b.Property<int>("WaterSourceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("Controllers");
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.DraftIrrigationSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("PlantTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("SoilTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("SprinkleTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ValveSizeId")
                        .HasColumnType("int");

                    b.Property<string>("ZoneDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZoneIssuesInspectionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZoneIssuesInspectionId");

                    b.ToTable("DraftIrrigationSettings");
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.InspectedZoneBrokenLateral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZoneIssuesInspectionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZoneIssuesInspectionId");

                    b.ToTable("InspectedZoneBrokenLateral");
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.InspectedZoneBrokenMain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZoneIssuesInspectionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZoneIssuesInspectionId");

                    b.ToTable("InspectedZoneBrokenMain");
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.InspectedZoneImages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageCaption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ImageIssueStatus")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZoneIssuesInspectionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZoneIssuesInspectionId");

                    b.ToTable("InspectedZoneImages");
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.Inspection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Compliant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ControllerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InspectionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InspectionModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInspectionCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInspectionDraft")
                        .HasColumnType("bit");

                    b.Property<string>("PriorEquipment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RainSensor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("WaterPressure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaterPressureUnit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Inspection");
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.MasterDataEntities.MonthsOfYear", b =>
                {
                    b.Property<int>("MonthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MonthId"));

                    b.Property<string>("MonthName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MonthId");

                    b.ToTable("MonthsOfYear");

                    b.HasData(
                        new
                        {
                            MonthId = 1,
                            MonthName = "January"
                        },
                        new
                        {
                            MonthId = 2,
                            MonthName = "February"
                        },
                        new
                        {
                            MonthId = 3,
                            MonthName = "March"
                        },
                        new
                        {
                            MonthId = 4,
                            MonthName = "April"
                        },
                        new
                        {
                            MonthId = 5,
                            MonthName = "May"
                        },
                        new
                        {
                            MonthId = 6,
                            MonthName = "June"
                        },
                        new
                        {
                            MonthId = 7,
                            MonthName = "July"
                        },
                        new
                        {
                            MonthId = 8,
                            MonthName = "August"
                        },
                        new
                        {
                            MonthId = 9,
                            MonthName = "September"
                        },
                        new
                        {
                            MonthId = 10,
                            MonthName = "October"
                        },
                        new
                        {
                            MonthId = 11,
                            MonthName = "November"
                        },
                        new
                        {
                            MonthId = 12,
                            MonthName = "December"
                        });
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.MasterDataEntities.MstBrokenLateralDropdown", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsBrokenLateralValue")
                        .HasColumnType("bit");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MstBrokenLateralDropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsBrokenLateralValue = false,
                            Value = "3/4\""
                        },
                        new
                        {
                            Id = 2,
                            IsBrokenLateralValue = false,
                            Value = "1\""
                        },
                        new
                        {
                            Id = 3,
                            IsBrokenLateralValue = false,
                            Value = "1 1/4\""
                        },
                        new
                        {
                            Id = 4,
                            IsBrokenLateralValue = false,
                            Value = "1 1/2\""
                        },
                        new
                        {
                            Id = 5,
                            IsBrokenLateralValue = false,
                            Value = "2\""
                        },
                        new
                        {
                            Id = 6,
                            IsBrokenLateralValue = false,
                            Value = "2 1/2\""
                        });
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.MasterDataEntities.MstFlowRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FlowRateNames")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MstFlowRate");
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.MasterDataEntities.MstManufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ManufacturerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MstManufacturer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ManufacturerName = "Hunter"
                        },
                        new
                        {
                            Id = 2,
                            ManufacturerName = "RainBird"
                        });
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.MasterDataEntities.MstModels", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ModelName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MstModels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModelName = "X-Core"
                        },
                        new
                        {
                            Id = 2,
                            ModelName = "X2"
                        },
                        new
                        {
                            Id = 3,
                            ModelName = "Pro-C"
                        },
                        new
                        {
                            Id = 4,
                            ModelName = "ICC2"
                        },
                        new
                        {
                            Id = 5,
                            ModelName = "HPC"
                        },
                        new
                        {
                            Id = 6,
                            ModelName = "Pro-HC"
                        },
                        new
                        {
                            Id = 7,
                            ModelName = "HCC"
                        },
                        new
                        {
                            Id = 8,
                            ModelName = "I-Core"
                        },
                        new
                        {
                            Id = 9,
                            ModelName = "ACC2"
                        },
                        new
                        {
                            Id = 10,
                            ModelName = "NODE-BT"
                        },
                        new
                        {
                            Id = 11,
                            ModelName = "NODE"
                        },
                        new
                        {
                            Id = 12,
                            ModelName = "XC Hybrid"
                        },
                        new
                        {
                            Id = 13,
                            ModelName = "ESP-2WIRE"
                        },
                        new
                        {
                            Id = 14,
                            ModelName = "ESP-9V"
                        },
                        new
                        {
                            Id = 15,
                            ModelName = "ESP-LXIVM"
                        },
                        new
                        {
                            Id = 16,
                            ModelName = "ESP-LXD"
                        },
                        new
                        {
                            Id = 17,
                            ModelName = "ESP-LXME2"
                        },
                        new
                        {
                            Id = 18,
                            ModelName = "ESP-ME3"
                        },
                        new
                        {
                            Id = 19,
                            ModelName = "ESP-TM2"
                        });
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.MasterDataEntities.MstMoreOrLess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MoreOrLessPercentage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MstMoreOrLess");
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.MasterDataEntities.MstPlantType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PlantType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MstPlantType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PlantType = "cool turf"
                        },
                        new
                        {
                            Id = 2,
                            PlantType = "warm turf"
                        },
                        new
                        {
                            Id = 3,
                            PlantType = "shrubs"
                        },
                        new
                        {
                            Id = 4,
                            PlantType = "annuals"
                        },
                        new
                        {
                            Id = 5,
                            PlantType = "trees"
                        });
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.MasterDataEntities.MstSeasonalAdjustDropdown", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MstSeasonalAdjustDropdown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Value = 0
                        },
                        new
                        {
                            Id = 2,
                            Value = 5
                        },
                        new
                        {
                            Id = 3,
                            Value = 10
                        },
                        new
                        {
                            Id = 4,
                            Value = 15
                        },
                        new
                        {
                            Id = 5,
                            Value = 20
                        },
                        new
                        {
                            Id = 6,
                            Value = 25
                        },
                        new
                        {
                            Id = 7,
                            Value = 30
                        },
                        new
                        {
                            Id = 8,
                            Value = 35
                        },
                        new
                        {
                            Id = 9,
                            Value = 40
                        },
                        new
                        {
                            Id = 10,
                            Value = 45
                        },
                        new
                        {
                            Id = 11,
                            Value = 50
                        },
                        new
                        {
                            Id = 12,
                            Value = 55
                        },
                        new
                        {
                            Id = 13,
                            Value = 60
                        },
                        new
                        {
                            Id = 14,
                            Value = 65
                        },
                        new
                        {
                            Id = 15,
                            Value = 70
                        },
                        new
                        {
                            Id = 16,
                            Value = 75
                        },
                        new
                        {
                            Id = 17,
                            Value = 80
                        },
                        new
                        {
                            Id = 18,
                            Value = 85
                        },
                        new
                        {
                            Id = 19,
                            Value = 90
                        },
                        new
                        {
                            Id = 20,
                            Value = 95
                        },
                        new
                        {
                            Id = 21,
                            Value = 100
                        },
                        new
                        {
                            Id = 22,
                            Value = 105
                        },
                        new
                        {
                            Id = 23,
                            Value = 110
                        },
                        new
                        {
                            Id = 24,
                            Value = 115
                        },
                        new
                        {
                            Id = 25,
                            Value = 120
                        },
                        new
                        {
                            Id = 26,
                            Value = 125
                        },
                        new
                        {
                            Id = 27,
                            Value = 130
                        },
                        new
                        {
                            Id = 28,
                            Value = 135
                        },
                        new
                        {
                            Id = 29,
                            Value = 140
                        },
                        new
                        {
                            Id = 30,
                            Value = 145
                        },
                        new
                        {
                            Id = 31,
                            Value = 150
                        },
                        new
                        {
                            Id = 32,
                            Value = 155
                        },
                        new
                        {
                            Id = 33,
                            Value = 160
                        },
                        new
                        {
                            Id = 34,
                            Value = 165
                        },
                        new
                        {
                            Id = 35,
                            Value = 170
                        },
                        new
                        {
                            Id = 36,
                            Value = 175
                        },
                        new
                        {
                            Id = 37,
                            Value = 180
                        },
                        new
                        {
                            Id = 38,
                            Value = 185
                        },
                        new
                        {
                            Id = 39,
                            Value = 190
                        },
                        new
                        {
                            Id = 40,
                            Value = 195
                        },
                        new
                        {
                            Id = 41,
                            Value = 200
                        },
                        new
                        {
                            Id = 42,
                            Value = 205
                        },
                        new
                        {
                            Id = 43,
                            Value = 210
                        },
                        new
                        {
                            Id = 44,
                            Value = 215
                        },
                        new
                        {
                            Id = 45,
                            Value = 220
                        },
                        new
                        {
                            Id = 46,
                            Value = 225
                        },
                        new
                        {
                            Id = 47,
                            Value = 230
                        },
                        new
                        {
                            Id = 48,
                            Value = 235
                        },
                        new
                        {
                            Id = 49,
                            Value = 240
                        },
                        new
                        {
                            Id = 50,
                            Value = 245
                        },
                        new
                        {
                            Id = 51,
                            Value = 250
                        },
                        new
                        {
                            Id = 52,
                            Value = 255
                        },
                        new
                        {
                            Id = 53,
                            Value = 260
                        },
                        new
                        {
                            Id = 54,
                            Value = 265
                        },
                        new
                        {
                            Id = 55,
                            Value = 270
                        },
                        new
                        {
                            Id = 56,
                            Value = 275
                        },
                        new
                        {
                            Id = 57,
                            Value = 280
                        },
                        new
                        {
                            Id = 58,
                            Value = 285
                        },
                        new
                        {
                            Id = 59,
                            Value = 290
                        },
                        new
                        {
                            Id = 60,
                            Value = 295
                        },
                        new
                        {
                            Id = 61,
                            Value = 300
                        });
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.MasterDataEntities.MstSlope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Slope")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MstSlope");
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.MasterDataEntities.MstSoilType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SoilType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MstSoilType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SoilType = "sand"
                        },
                        new
                        {
                            Id = 2,
                            SoilType = "loam"
                        },
                        new
                        {
                            Id = 3,
                            SoilType = "clay"
                        });
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.MasterDataEntities.MstSprinklerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SprinklerTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MstSprinklerType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SprinklerTypeName = "standard(non-et)"
                        },
                        new
                        {
                            Id = 2,
                            SprinklerTypeName = "off"
                        },
                        new
                        {
                            Id = 3,
                            SprinklerTypeName = "spray(1.5\")"
                        },
                        new
                        {
                            Id = 4,
                            SprinklerTypeName = "rotor(0.5\")"
                        },
                        new
                        {
                            Id = 5,
                            SprinklerTypeName = "drip(1.1\")"
                        });
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.MasterDataEntities.MstValveSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ValveSizenames")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MstValveSize");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ValveSizenames = "not set"
                        },
                        new
                        {
                            Id = 2,
                            ValveSizenames = "0.8\""
                        },
                        new
                        {
                            Id = 3,
                            ValveSizenames = "1.8\""
                        },
                        new
                        {
                            Id = 4,
                            ValveSizenames = "1.3\""
                        },
                        new
                        {
                            Id = 5,
                            ValveSizenames = "1.5\""
                        },
                        new
                        {
                            Id = 6,
                            ValveSizenames = "2.0\""
                        },
                        new
                        {
                            Id = 7,
                            ValveSizenames = "2.5\""
                        },
                        new
                        {
                            Id = 8,
                            ValveSizenames = "3.0\""
                        },
                        new
                        {
                            Id = 9,
                            ValveSizenames = "4.0\""
                        });
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.MasterDataEntities.MstWaterSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("WaterSourceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MstWaterSource");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            WaterSourceName = "Water Meter"
                        },
                        new
                        {
                            Id = 2,
                            WaterSourceName = "Pump"
                        },
                        new
                        {
                            Id = 3,
                            WaterSourceName = "Well"
                        });
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.MasterDataEntities.MstZoneAreaDropDown", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MstZoneAreaDropDown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Value = "1%"
                        },
                        new
                        {
                            Id = 2,
                            Value = "2%"
                        },
                        new
                        {
                            Id = 3,
                            Value = "3%"
                        },
                        new
                        {
                            Id = 4,
                            Value = "4%"
                        },
                        new
                        {
                            Id = 5,
                            Value = "5%"
                        },
                        new
                        {
                            Id = 6,
                            Value = "6%"
                        },
                        new
                        {
                            Id = 7,
                            Value = "7%"
                        },
                        new
                        {
                            Id = 8,
                            Value = "8%"
                        },
                        new
                        {
                            Id = 9,
                            Value = "9%"
                        },
                        new
                        {
                            Id = 10,
                            Value = "10%"
                        },
                        new
                        {
                            Id = 11,
                            Value = "11%"
                        },
                        new
                        {
                            Id = 12,
                            Value = "12%"
                        },
                        new
                        {
                            Id = 13,
                            Value = "13%"
                        },
                        new
                        {
                            Id = 14,
                            Value = "14%"
                        },
                        new
                        {
                            Id = 15,
                            Value = "15%"
                        },
                        new
                        {
                            Id = 16,
                            Value = "16%"
                        },
                        new
                        {
                            Id = 17,
                            Value = "17%"
                        },
                        new
                        {
                            Id = 18,
                            Value = "18%"
                        },
                        new
                        {
                            Id = 19,
                            Value = "19%"
                        },
                        new
                        {
                            Id = 20,
                            Value = "20%"
                        },
                        new
                        {
                            Id = 21,
                            Value = "21%"
                        },
                        new
                        {
                            Id = 22,
                            Value = "22%"
                        },
                        new
                        {
                            Id = 23,
                            Value = "23%"
                        },
                        new
                        {
                            Id = 24,
                            Value = "24%"
                        },
                        new
                        {
                            Id = 25,
                            Value = "25%"
                        },
                        new
                        {
                            Id = 26,
                            Value = "26%"
                        },
                        new
                        {
                            Id = 27,
                            Value = "27%"
                        },
                        new
                        {
                            Id = 28,
                            Value = "28%"
                        },
                        new
                        {
                            Id = 29,
                            Value = "29%"
                        },
                        new
                        {
                            Id = 30,
                            Value = "30%"
                        },
                        new
                        {
                            Id = 31,
                            Value = "31%"
                        },
                        new
                        {
                            Id = 32,
                            Value = "32%"
                        },
                        new
                        {
                            Id = 33,
                            Value = "33%"
                        },
                        new
                        {
                            Id = 34,
                            Value = "34%"
                        },
                        new
                        {
                            Id = 35,
                            Value = "35%"
                        },
                        new
                        {
                            Id = 36,
                            Value = "36%"
                        },
                        new
                        {
                            Id = 37,
                            Value = "37%"
                        },
                        new
                        {
                            Id = 38,
                            Value = "38%"
                        },
                        new
                        {
                            Id = 39,
                            Value = "39%"
                        },
                        new
                        {
                            Id = 40,
                            Value = "40%"
                        },
                        new
                        {
                            Id = 41,
                            Value = "41%"
                        },
                        new
                        {
                            Id = 42,
                            Value = "42%"
                        },
                        new
                        {
                            Id = 43,
                            Value = "43%"
                        },
                        new
                        {
                            Id = 44,
                            Value = "44%"
                        },
                        new
                        {
                            Id = 45,
                            Value = "45%"
                        },
                        new
                        {
                            Id = 46,
                            Value = "46%"
                        },
                        new
                        {
                            Id = 47,
                            Value = "47%"
                        },
                        new
                        {
                            Id = 48,
                            Value = "48%"
                        },
                        new
                        {
                            Id = 49,
                            Value = "49%"
                        },
                        new
                        {
                            Id = 50,
                            Value = "50%"
                        },
                        new
                        {
                            Id = 51,
                            Value = "51%"
                        },
                        new
                        {
                            Id = 52,
                            Value = "52%"
                        },
                        new
                        {
                            Id = 53,
                            Value = "53%"
                        },
                        new
                        {
                            Id = 54,
                            Value = "54%"
                        },
                        new
                        {
                            Id = 55,
                            Value = "55%"
                        },
                        new
                        {
                            Id = 56,
                            Value = "56%"
                        },
                        new
                        {
                            Id = 57,
                            Value = "57%"
                        },
                        new
                        {
                            Id = 58,
                            Value = "58%"
                        },
                        new
                        {
                            Id = 59,
                            Value = "59%"
                        },
                        new
                        {
                            Id = 60,
                            Value = "60%"
                        },
                        new
                        {
                            Id = 61,
                            Value = "61%"
                        },
                        new
                        {
                            Id = 62,
                            Value = "62%"
                        },
                        new
                        {
                            Id = 63,
                            Value = "63%"
                        },
                        new
                        {
                            Id = 64,
                            Value = "64%"
                        },
                        new
                        {
                            Id = 65,
                            Value = "65%"
                        },
                        new
                        {
                            Id = 66,
                            Value = "66%"
                        },
                        new
                        {
                            Id = 67,
                            Value = "67%"
                        },
                        new
                        {
                            Id = 68,
                            Value = "68%"
                        },
                        new
                        {
                            Id = 69,
                            Value = "69%"
                        },
                        new
                        {
                            Id = 70,
                            Value = "70%"
                        },
                        new
                        {
                            Id = 71,
                            Value = "71%"
                        },
                        new
                        {
                            Id = 72,
                            Value = "72%"
                        },
                        new
                        {
                            Id = 73,
                            Value = "73%"
                        },
                        new
                        {
                            Id = 74,
                            Value = "74%"
                        },
                        new
                        {
                            Id = 75,
                            Value = "75%"
                        },
                        new
                        {
                            Id = 76,
                            Value = "76%"
                        },
                        new
                        {
                            Id = 77,
                            Value = "77%"
                        },
                        new
                        {
                            Id = 78,
                            Value = "78%"
                        },
                        new
                        {
                            Id = 79,
                            Value = "79%"
                        },
                        new
                        {
                            Id = 80,
                            Value = "80%"
                        },
                        new
                        {
                            Id = 81,
                            Value = "81%"
                        },
                        new
                        {
                            Id = 82,
                            Value = "82%"
                        },
                        new
                        {
                            Id = 83,
                            Value = "83%"
                        },
                        new
                        {
                            Id = 84,
                            Value = "84%"
                        },
                        new
                        {
                            Id = 85,
                            Value = "85%"
                        },
                        new
                        {
                            Id = 86,
                            Value = "86%"
                        },
                        new
                        {
                            Id = 87,
                            Value = "87%"
                        },
                        new
                        {
                            Id = 88,
                            Value = "88%"
                        },
                        new
                        {
                            Id = 89,
                            Value = "89%"
                        },
                        new
                        {
                            Id = 90,
                            Value = "90%"
                        },
                        new
                        {
                            Id = 91,
                            Value = "91%"
                        },
                        new
                        {
                            Id = 92,
                            Value = "92%"
                        },
                        new
                        {
                            Id = 93,
                            Value = "93%"
                        },
                        new
                        {
                            Id = 94,
                            Value = "94%"
                        },
                        new
                        {
                            Id = 95,
                            Value = "95%"
                        },
                        new
                        {
                            Id = 96,
                            Value = "96%"
                        },
                        new
                        {
                            Id = 97,
                            Value = "97%"
                        },
                        new
                        {
                            Id = 98,
                            Value = "98%"
                        },
                        new
                        {
                            Id = 99,
                            Value = "99%"
                        },
                        new
                        {
                            Id = 100,
                            Value = "100%"
                        });
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.MasterDataEntities.MstZoneIssuesDropDown", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MstZoneIssuesDropDown");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Value = "25"
                        },
                        new
                        {
                            Id = 2,
                            Value = "24"
                        },
                        new
                        {
                            Id = 3,
                            Value = "23"
                        },
                        new
                        {
                            Id = 4,
                            Value = "22"
                        },
                        new
                        {
                            Id = 5,
                            Value = "21"
                        },
                        new
                        {
                            Id = 6,
                            Value = "20"
                        },
                        new
                        {
                            Id = 7,
                            Value = "19"
                        },
                        new
                        {
                            Id = 8,
                            Value = "18"
                        },
                        new
                        {
                            Id = 9,
                            Value = "17"
                        },
                        new
                        {
                            Id = 10,
                            Value = "16"
                        },
                        new
                        {
                            Id = 11,
                            Value = "15"
                        },
                        new
                        {
                            Id = 12,
                            Value = "14"
                        },
                        new
                        {
                            Id = 13,
                            Value = "13"
                        },
                        new
                        {
                            Id = 14,
                            Value = "12"
                        },
                        new
                        {
                            Id = 15,
                            Value = "11"
                        },
                        new
                        {
                            Id = 16,
                            Value = "10"
                        },
                        new
                        {
                            Id = 17,
                            Value = "9"
                        },
                        new
                        {
                            Id = 18,
                            Value = "8"
                        },
                        new
                        {
                            Id = 19,
                            Value = "7"
                        },
                        new
                        {
                            Id = 20,
                            Value = "6"
                        },
                        new
                        {
                            Id = 21,
                            Value = "5"
                        },
                        new
                        {
                            Id = 22,
                            Value = "4"
                        },
                        new
                        {
                            Id = 23,
                            Value = "3"
                        },
                        new
                        {
                            Id = 24,
                            Value = "2"
                        },
                        new
                        {
                            Id = 25,
                            Value = "1"
                        });
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.MasterDataEntities.ProgramRunTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProgramRunTime");
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.MasterDataEntities.ProgramStartTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProgramStartTime");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Value = "OFF"
                        },
                        new
                        {
                            Id = 2,
                            Value = "12:00"
                        },
                        new
                        {
                            Id = 3,
                            Value = "12:10"
                        },
                        new
                        {
                            Id = 4,
                            Value = "12:20"
                        },
                        new
                        {
                            Id = 5,
                            Value = "12:30"
                        },
                        new
                        {
                            Id = 6,
                            Value = "12:40"
                        },
                        new
                        {
                            Id = 7,
                            Value = "12:50"
                        },
                        new
                        {
                            Id = 8,
                            Value = "13:00"
                        },
                        new
                        {
                            Id = 9,
                            Value = "13:10"
                        },
                        new
                        {
                            Id = 10,
                            Value = "13:20"
                        },
                        new
                        {
                            Id = 11,
                            Value = "13:30"
                        },
                        new
                        {
                            Id = 12,
                            Value = "13:40"
                        },
                        new
                        {
                            Id = 13,
                            Value = "13:50"
                        },
                        new
                        {
                            Id = 14,
                            Value = "14:00"
                        },
                        new
                        {
                            Id = 15,
                            Value = "14:10"
                        },
                        new
                        {
                            Id = 16,
                            Value = "14:20"
                        },
                        new
                        {
                            Id = 17,
                            Value = "14:30"
                        },
                        new
                        {
                            Id = 18,
                            Value = "14:40"
                        },
                        new
                        {
                            Id = 19,
                            Value = "14:50"
                        },
                        new
                        {
                            Id = 20,
                            Value = "15:00"
                        },
                        new
                        {
                            Id = 21,
                            Value = "15:10"
                        },
                        new
                        {
                            Id = 22,
                            Value = "15:20"
                        },
                        new
                        {
                            Id = 23,
                            Value = "15:30"
                        },
                        new
                        {
                            Id = 24,
                            Value = "15:40"
                        },
                        new
                        {
                            Id = 25,
                            Value = "15:50"
                        },
                        new
                        {
                            Id = 26,
                            Value = "16:00"
                        },
                        new
                        {
                            Id = 27,
                            Value = "16:10"
                        },
                        new
                        {
                            Id = 28,
                            Value = "16:20"
                        },
                        new
                        {
                            Id = 29,
                            Value = "16:30"
                        },
                        new
                        {
                            Id = 30,
                            Value = "16:40"
                        },
                        new
                        {
                            Id = 31,
                            Value = "16:50"
                        },
                        new
                        {
                            Id = 32,
                            Value = "17:00"
                        },
                        new
                        {
                            Id = 33,
                            Value = "17:10"
                        },
                        new
                        {
                            Id = 34,
                            Value = "17:20"
                        },
                        new
                        {
                            Id = 35,
                            Value = "17:30"
                        },
                        new
                        {
                            Id = 36,
                            Value = "17:40"
                        },
                        new
                        {
                            Id = 37,
                            Value = "17:50"
                        },
                        new
                        {
                            Id = 38,
                            Value = "18:00"
                        },
                        new
                        {
                            Id = 39,
                            Value = "18:10"
                        },
                        new
                        {
                            Id = 40,
                            Value = "18:20"
                        },
                        new
                        {
                            Id = 41,
                            Value = "18:30"
                        },
                        new
                        {
                            Id = 42,
                            Value = "18:40"
                        },
                        new
                        {
                            Id = 43,
                            Value = "18:50"
                        },
                        new
                        {
                            Id = 44,
                            Value = "19:00"
                        },
                        new
                        {
                            Id = 45,
                            Value = "19:10"
                        },
                        new
                        {
                            Id = 46,
                            Value = "19:20"
                        },
                        new
                        {
                            Id = 47,
                            Value = "19:30"
                        },
                        new
                        {
                            Id = 48,
                            Value = "19:40"
                        },
                        new
                        {
                            Id = 49,
                            Value = "19:50"
                        },
                        new
                        {
                            Id = 50,
                            Value = "20:00"
                        },
                        new
                        {
                            Id = 51,
                            Value = "20:10"
                        },
                        new
                        {
                            Id = 52,
                            Value = "20:20"
                        },
                        new
                        {
                            Id = 53,
                            Value = "20:30"
                        },
                        new
                        {
                            Id = 54,
                            Value = "20:40"
                        },
                        new
                        {
                            Id = 55,
                            Value = "20:50"
                        },
                        new
                        {
                            Id = 56,
                            Value = "21:00"
                        },
                        new
                        {
                            Id = 57,
                            Value = "21:10"
                        },
                        new
                        {
                            Id = 58,
                            Value = "21:20"
                        },
                        new
                        {
                            Id = 59,
                            Value = "21:30"
                        },
                        new
                        {
                            Id = 60,
                            Value = "21:40"
                        },
                        new
                        {
                            Id = 61,
                            Value = "21:50"
                        },
                        new
                        {
                            Id = 62,
                            Value = "22:00"
                        },
                        new
                        {
                            Id = 63,
                            Value = "22:10"
                        },
                        new
                        {
                            Id = 64,
                            Value = "22:20"
                        },
                        new
                        {
                            Id = 65,
                            Value = "22:30"
                        },
                        new
                        {
                            Id = 66,
                            Value = "22:40"
                        },
                        new
                        {
                            Id = 67,
                            Value = "22:50"
                        },
                        new
                        {
                            Id = 68,
                            Value = "23:00"
                        },
                        new
                        {
                            Id = 69,
                            Value = "23:10"
                        },
                        new
                        {
                            Id = 70,
                            Value = "23:20"
                        },
                        new
                        {
                            Id = 71,
                            Value = "23:30"
                        },
                        new
                        {
                            Id = 72,
                            Value = "23:40"
                        });
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.MstRoles", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("MstRoles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "Technician"
                        });
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.MstUsersDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactTagList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedByUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeNumber")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("MstUsersDetails");
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.Properties", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountOwnerContactID")
                        .HasColumnType("int");

                    b.Property<string>("AccountOwnerContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ActiveOpportunityID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BranchID")
                        .HasColumnType("int");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Budget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollectionNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompetitorID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountyID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedByUserID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DragDropGeoLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EarliestOpportunityWonDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailInvoice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GEOLocationLatitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GEOLocationLongitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GEOPerimeter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPSGeofenceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GPSUpdated")
                        .HasColumnType("bit");

                    b.Property<int?>("IndustryID")
                        .HasColumnType("int");

                    b.Property<string>("IndustryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntegrationID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LeadSourceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeadSourceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalityID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedByUserID")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentTermsID")
                        .HasColumnType("int");

                    b.Property<string>("PaymentTermsName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductionManagerContactID")
                        .HasColumnType("int");

                    b.Property<string>("ProductionManagerContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductionNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyAddressCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PropertyAddressID")
                        .HasColumnType("int");

                    b.Property<string>("PropertyAddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyAddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyAddressStateProvinceCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyAddressZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PropertyGroupID")
                        .HasColumnType("int");

                    b.Property<string>("PropertyGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropertyID")
                        .HasColumnType("int");

                    b.Property<string>("PropertyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyNameAbr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PropertyStatusID")
                        .HasColumnType("int");

                    b.Property<string>("PropertyStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PropertyTypeID")
                        .HasColumnType("int");

                    b.Property<string>("PropertyTypeIntegrationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeparateInvoices")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SequenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SnowNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TaxJurisdictionID")
                        .HasColumnType("int");

                    b.Property<string>("TaxJurisdictionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.PropertiesContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("BillingContact")
                        .HasColumnType("bit");

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContactID")
                        .HasColumnType("int");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedByUserID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EmailInvoiceContact")
                        .HasColumnType("bit");

                    b.Property<bool>("EmailNotificationsContact")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedByUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedByUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PrimaryContact")
                        .HasColumnType("bit");

                    b.Property<int?>("PropertiesId")
                        .HasColumnType("int");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<bool>("SMSNotificationsContact")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PropertiesId");

                    b.ToTable("PropertiesContact");
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.SeasionalAdjust", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ControllerId")
                        .HasColumnType("int");

                    b.Property<int>("MonthId")
                        .HasColumnType("int");

                    b.Property<int>("ProgramA")
                        .HasColumnType("int");

                    b.Property<int>("ProgramB")
                        .HasColumnType("int");

                    b.Property<int>("ProgramC")
                        .HasColumnType("int");

                    b.Property<int>("ProgramD")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ControllerId");

                    b.ToTable("SeasionalAdjust");
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.ZoneIssuesInspection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Area")
                        .HasColumnType("int");

                    b.Property<int>("BlockedHead")
                        .HasColumnType("int");

                    b.Property<int>("BrokenDrip")
                        .HasColumnType("int");

                    b.Property<int>("BrokenHead")
                        .HasColumnType("int");

                    b.Property<int>("CloggedNozzle")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedCost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GpmValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InspectionId")
                        .HasColumnType("int");

                    b.Property<int>("LowerHead")
                        .HasColumnType("int");

                    b.Property<int>("RaiseHead")
                        .HasColumnType("int");

                    b.Property<string>("ScopeStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InspectionId");

                    b.ToTable("ZoneIssuesInspection");
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.ControllerProgrames", b =>
                {
                    b.HasOne("PureGreenLandGroup.Domain.Entities.Controllers", "Controllers")
                        .WithMany()
                        .HasForeignKey("ControllerId");

                    b.Navigation("Controllers");
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.ControllerZones", b =>
                {
                    b.HasOne("PureGreenLandGroup.Domain.Entities.Controllers", "Controllers")
                        .WithMany()
                        .HasForeignKey("ControllerId");

                    b.Navigation("Controllers");
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.Controllers", b =>
                {
                    b.HasOne("PureGreenLandGroup.Domain.Entities.Properties", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.DraftIrrigationSettings", b =>
                {
                    b.HasOne("PureGreenLandGroup.Domain.Entities.ZoneIssuesInspection", "ZoneIssuesInspection")
                        .WithMany()
                        .HasForeignKey("ZoneIssuesInspectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZoneIssuesInspection");
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.InspectedZoneBrokenLateral", b =>
                {
                    b.HasOne("PureGreenLandGroup.Domain.Entities.ZoneIssuesInspection", "ZoneIssuesInspection")
                        .WithMany()
                        .HasForeignKey("ZoneIssuesInspectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZoneIssuesInspection");
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.InspectedZoneBrokenMain", b =>
                {
                    b.HasOne("PureGreenLandGroup.Domain.Entities.ZoneIssuesInspection", "ZoneIssuesInspection")
                        .WithMany()
                        .HasForeignKey("ZoneIssuesInspectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZoneIssuesInspection");
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.InspectedZoneImages", b =>
                {
                    b.HasOne("PureGreenLandGroup.Domain.Entities.ZoneIssuesInspection", "ZoneIssuesInspection")
                        .WithMany()
                        .HasForeignKey("ZoneIssuesInspectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZoneIssuesInspection");
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.MstUsersDetails", b =>
                {
                    b.HasOne("PureGreenLandGroup.Domain.Entities.MstRoles", "MstRoles")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MstRoles");
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.PropertiesContact", b =>
                {
                    b.HasOne("PureGreenLandGroup.Domain.Entities.Properties", null)
                        .WithMany("PropertiesContacts")
                        .HasForeignKey("PropertiesId");
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.SeasionalAdjust", b =>
                {
                    b.HasOne("PureGreenLandGroup.Domain.Entities.ZoneIssuesInspection", "ZoneIssuesInspection")
                        .WithMany()
                        .HasForeignKey("ControllerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZoneIssuesInspection");
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.ZoneIssuesInspection", b =>
                {
                    b.HasOne("PureGreenLandGroup.Domain.Entities.Inspection", "Inspection")
                        .WithMany()
                        .HasForeignKey("InspectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inspection");
                });

            modelBuilder.Entity("PureGreenLandGroup.Domain.Entities.Properties", b =>
                {
                    b.Navigation("PropertiesContacts");
                });
#pragma warning restore 612, 618
        }
    }
}
